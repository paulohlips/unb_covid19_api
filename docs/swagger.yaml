swagger: '2.0'
info:
  version: 1.0.0
  title: Covid API documentation
  description: This is an API



tags:
  - name: sessions
    description: 'to sessions'
  - name: users
    description: 'to clients'
  - name: Volunteers
    description: 'to volunteers'
  - name: Help Request
    description: 'to help request'
    
paths:
  /sessions:
    post:
      tags:
        - sessions
      description: 'Send a user information to the API'
      parameters:
        - name: sessions
          in: body
          required: true
          description: 'Sessions information'
          schema:
            $ref: '#/definitions/SessionData'
            
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SessionResponse200'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/SessionResponse401'

  /users:
  
    get:
      tags:
        - users
      description: 'Return a list of all users registered in the database<br>You have to use a token'
      # parameters:
      #   - name: user
      #     type: string
      #     in: query
      #     description: 'Filter by names.<br><b>Example:</b>
      #                   `?name=Daniel`'

      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UsersResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Response401'

            
    post:
      tags:
        - users
      description: 'Send user information to API'
      parameters:
        - name: users
          in: body
          required: true
          description: 'Users information'
          schema:
            $ref: '#/definitions/UsersData'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UsersData'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Response401'


  /volunteers:
    get:
      tags:
        - Volunteers
      description: "Return a list of volunteers<br>You have to use a token"
      
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ValidationFails'
          
    post:
      tags:
        - Volunteers
      description: "You can create a volunteer"
      parameters:
        - name: Volunteers
          in: body
          required: true
          description: "Create a Volunteer"
          schema:
            $ref: '#/definitions/postVolunteers'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/volunteerExist'
    
    put:
      tags:
        - Volunteers
      description: "You can change status of the 'key is_sick'"
      parameters:
        - name: Volunteers
          in: body
          required: true
          description: "Is sick validation"
          schema:
            $ref: '#/definitions/putVolunteers'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/putVolunteers200'

  /help:
    get:
      tags:
        - Help Request
      description: "Return a list of help alerts <br> You have to use a token"
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ValidationFails'
    post:
      tags:
        - Help Request
      description: 'Send user information to API'
      parameters:
        - name: users
          in: body
          required: true
          description: 'Users information'
          schema:
            $ref: '#/definitions/HelpRequest'
      responses:
        '200':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ValidationFails'


definitions:

  SessionData:
    required:
      - email
      - password
    type: object
    properties:
      email:
        type: string
        example: "joão@gmail.com"
      
      password:
        type: string
        example: '123456'
      
  UsersData:
    required:
      - name
      - email
      - password
    type: object
    properties:
      name:
        type: string
        example: 'João José'
      email:
        type: string
        example: 'joão@gmail.com'
      whatsapp:
        type: string
        example: '6199999999'
      password:
        type: string
        example: '123456'
      address:
        type: string
        example: '72705010'
      birth_date:
        type: string
        example: '01/01/2001'
      link_unb:
        type: string
        example: 'Discente'
      risk_group:
        type: string
        example: 'Asma'
      user_location:
        type: string
        example: '-15.7757876:-48.077829'

  UsersResponse:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: 'Paulo'
      email:
        type: string
        example: 'paulo@gmail.com'
      whatsapp:
        type: string
        example: '6199999999'
      password_hash:
        type: string
        example: '$2a$08$oAqpElaLP'
      address:
        type: string
        example: '72705010'
      birth_date:
        type: string
        example: '01/01/2001'
      link_unb:
        type: string
        example: 'Discente'
      risk_group:
        type: string
        example: 'Asma'
      user_location:
        type: string
        example: '-15.7757876:-48.077829'
      createdAt:
        type: string
        example: "2020-04-03T13:27:07.746Z"
      updatedAt:
        type: string
        example: "2020-04-03T13:27:07.746Z"

  SessionResponse200:
    type: object
    properties:
      user:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: João José
          email:
            type: string
            example: joao@gmail.com
      token:
        type: string
        example: "eyJhbGciOiJMpLIC0B5UMYudjNNR3KeDCI0XpNY"

  SessionResponse401:
    type: object
    properties:
      error:
        type: string
        example: "Email/Password does not match"
        
  Response401:
    type: object
    properties:
      error:
        type: string
        example: Invalid Token
        
  ValidationFails:
    type: object
    properties:
      error:
        type: string
        example: "Validation fails"
        
        
  Response200:
    type: object
    properties:
      code:
        type: integer
        example: 200
      message:
        type: string
        example: 'Success'
        
  HelpRequest:
    type: object
    properties:
      name:
        type: string
        example: "Daniel Prado"
      sintoms:
        type: string
        example: "Tosse seca"
      whatsapp:
        type: string
        example: "6155555555"


  HelpRequest200:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: "Daniel Prado"
      sintoms:
        type: string
        example: "Tosse seca"
      whatsapp:
        type: string
        example: "6155555555"
      user_location:
        type: string
        example: '-15.7757876:-48.077829'
      createdAt:
        type: string
        example: "2020-04-03T13:27:07.746Z"
      updatedAt:
        type: string
        example: "2020-04-03T13:27:07.746Z"
      
      
  putVolunteers:
    type: object
    properties:
      email:
        type: string
        example: "paulo@gmail.com"
      is_sick:
        type: boolean
        example: false
        
  putVolunteers200:
    type: object
    properties:
      id:
        type: integer
        example: 1
      name:
        type: string
        example: "Paulo"
      is_sick:
        type: boolean
        example: false
        
  postVolunteers:
    type: object
    properties:
      name:
        type: string
        example: "Paulo"
      email:
        type: string
        example: "paulo@gmail.com"
      whatsapp:
        type: string
        example: "61555555555"
      cpf:
        type: string
        example: "22222222222"
      professional_id:
        type: string
        example: "124.212-5"
      uf:
        type: string
        example: "DF"
      specialty:
        type: string
        example: "Engenheiro"
      administrative_region:
        type: string
        example: "plano Piloto"
      activities:
        type: string
        example: "Configuração de VMs"
      user_location:
        type: string
        example: "-15.7757876:-48.077829"
        
  volunteerExist:
    type: object
    properties:
      error:
        type: string
        example: "VolunteerExists already exist"
